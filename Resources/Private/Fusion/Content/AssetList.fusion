prototype(Jonnitto.AssetList:AssetList) < prototype(Neos.Neos:ContentComponent) {
    contentElement = true

    assets = ${q(node).property('assets')}
    forceDownload = ${q(node).property('forceDownload')}
    thumbnail = ${q(node).property('thumbnail')}
    namespace = 'assets-list'
    count = ${Carbon.Array.length(this.assets)}
    container = ${Configuration.setting('Jonnitto.AssetList.container')}
    target = ${Configuration.setting('Jonnitto.AssetList.externalTarget')}
    maximumWidth = ${Configuration.setting('Jonnitto.AssetList.thumbnail.maximumWidth')}
    type = ${this.thumbnail ? 'thumbnail' : 'text'}

    renderer = afx`
        <Carbon.Notification:Backend
            @if={!props.count}
            content={Translation.translate('content.emptyAssetList', null, [], 'NodeTypes/AssetList', 'Jonnitto.AssetList')}
        />
        <Carbon.Eel:Tag
            @if={props.count}
            tagName={props.container ? 'div' : null}
            attributes.class={Type.isString(props.container) ? props.container : null}
        >
            <div class={[BEM.modifier(props.namespace, ['count-' + props.count, props.type])]}>
                <Jonnitto.AssetList:Component.Collection {...props} />
            </div>
        </Carbon.Eel:Tag>
    `

    @context.contentElement = ${this.contentElement}
    @process.contentElementWrapping.@if.contentElementWrapping = ${contentElement}
}
